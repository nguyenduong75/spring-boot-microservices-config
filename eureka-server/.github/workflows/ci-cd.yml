name: CI/CD - Multi Service (Gradle Build)

on:
  push:
    branches: [main]
  pull_request:

env:
  DOCKER_USERNAME: duongnguyen75

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - file-storage
          - gateway
          - job-service
          - notification-service
          - user-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build JAR with Gradle - ${{ matrix.service }}
        run: |
          chmod +x ./${{ matrix.service }}/gradlew
          ./${{ matrix.service }}/gradlew -p ./${{ matrix.service }} build

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.service }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.service }}-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

  snip

- name: Build Docker Image - ${{ matrix.service }}
  run: |
    docker buildx build \
      --cache-from type=local,src=/tmp/.buildx-cache \
      --cache-to type=local,dest=/tmp/.buildx-cache \
      -t $DOCKER_USERNAME/${{ matrix.service }}:${{ github.sha }} \
      -t $DOCKER_USERNAME/${{ matrix.service }}:latest \
      ./${{ matrix.service }}

- name: Login to Docker Hub
  if: github.event_name == 'push'
  uses: docker/login-action@v3
  with:
    username: ${{ env.DOCKER_USERNAME }}
    password: ${{ secrets.DOCKER_PASSWORD }}

- name: Push Docker Image - ${{ matrix.service }}
  if: github.event_name == 'push'
  run: |
    docker push $DOCKER_USERNAME/${{ matrix.service }}:${{ github.sha }}
    docker push $DOCKER_USERNAME/${{ matrix.service }}:latest